---
<%
    ingress_addrs = []
    if_link("doppler") { |ds|
        ingress_addrs = ds.instances.map do |instance|
            "#{instance.address}:#{ds.p('doppler.grpc_port')}"
        end
    }.else {
        ingress_addrs = p('loggregator.doppler.addrs').map do |addr|
            "#{addr}:#{p('loggregator.doppler.grpc_port')}"
        end
    }
%>
processes:
- name: reverse_log_proxy
  executable: /var/vcap/packages/reverse_log_proxy/rlp
  args:
  - "--health-addr=<%= p('reverse_log_proxy.health_addr') %>"
  - "--ingress-addrs=<%= ingress_addrs.join(',') %>"
  - "--metron-addr=<%= [ p('metron_endpoint.host'), p('metron_endpoint.grpc_port')].join(':') %>"
  - --ca=/var/vcap/jobs/reverse_log_proxy/config/certs/mutual_tls_ca.crt
  - --cert=/var/vcap/jobs/reverse_log_proxy/config/certs/reverse_log_proxy.crt
  - --cipher-suites=<%= p('loggregator.tls.cipher_suites') %>
  - --egress-port=<%= p('reverse_log_proxy.egress.port') %>
  - --key=/var/vcap/jobs/reverse_log_proxy/config/certs/reverse_log_proxy.key
  - --metric-emitter-interval=<%= p('metric_emitter.interval') %>
  - --pprof-port=<%= p('reverse_log_proxy.pprof.port') %>
  env:
  workdir: /var/vcap/packages/reverse_log_proxy
  limits:
    open_files: 8192
